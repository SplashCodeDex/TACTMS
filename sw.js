try{self["workbox:core:7.2.0"]&&_()}catch{}const re=(s,...e)=>{let t=s;return e.length>0&&(t+=` :: ${JSON.stringify(e)}`),t},oe=re;class l extends Error{constructor(e,t){const n=oe(e,t);super(n),this.name=e,this.details=t}}const f={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:typeof registration<"u"?registration.scope:""},U=s=>[f.prefix,s,f.suffix].filter(e=>e&&e.length>0).join("-"),ce=s=>{for(const e of Object.keys(f))s(e)},k={updateDetails:s=>{ce(e=>{typeof s[e]=="string"&&(f[e]=s[e])})},getGoogleAnalyticsName:s=>s||U(f.googleAnalytics),getPrecacheName:s=>s||U(f.precache),getPrefix:()=>f.prefix,getRuntimeName:s=>s||U(f.runtime),getSuffix:()=>f.suffix};function j(s,e){const t=e();return s.waitUntil(t),t}try{self["workbox:precaching:7.2.0"]&&_()}catch{}const he="__WB_REVISION__";function le(s){if(!s)throw new l("add-to-cache-list-unexpected-type",{entry:s});if(typeof s=="string"){const i=new URL(s,location.href);return{cacheKey:i.href,url:i.href}}const{revision:e,url:t}=s;if(!t)throw new l("add-to-cache-list-unexpected-type",{entry:s});if(!e){const i=new URL(t,location.href);return{cacheKey:i.href,url:i.href}}const n=new URL(t,location.href),a=new URL(t,location.href);return n.searchParams.set(he,e),{cacheKey:n.href,url:a.href}}class ue{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:n})=>{if(e.type==="install"&&t&&t.originalRequest&&t.originalRequest instanceof Request){const a=t.originalRequest.url;n?this.notUpdatedURLs.push(a):this.updatedURLs.push(a)}return n}}}class de{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:t,params:n})=>{const a=(n==null?void 0:n.cacheKey)||this._precacheController.getCacheKeyForURL(t.url);return a?new Request(a,{headers:t.headers}):t},this._precacheController=e}}let b;function fe(){if(b===void 0){const s=new Response("");if("body"in s)try{new Response(s.body),b=!0}catch{b=!1}b=!1}return b}async function pe(s,e){let t=null;if(s.url&&(t=new URL(s.url).origin),t!==self.location.origin)throw new l("cross-origin-copy-response",{origin:t});const n=s.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=fe()?n.body:await n.blob();return new Response(r,i)}const ye=s=>new URL(String(s),location.href).href.replace(new RegExp(`^${location.origin}`),"");function W(s,e){const t=new URL(s);for(const n of e)t.searchParams.delete(n);return t.href}async function me(s,e,t,n){const a=W(e.url,t);if(e.url===a)return s.match(e,n);const i=Object.assign(Object.assign({},n),{ignoreSearch:!0}),r=await s.keys(e,i);for(const o of r){const c=W(o.url,t);if(a===c)return s.match(o,n)}}class ge{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}const J=new Set;async function we(){for(const s of J)await s()}function X(s){return new Promise(e=>setTimeout(e,s))}try{self["workbox:strategies:7.2.0"]&&_()}catch{}function D(s){return typeof s=="string"?new Request(s):s}class _e{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new ge,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const n of this._plugins)this._pluginStateMap.set(n,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let n=D(e);if(n.mode==="navigate"&&t instanceof FetchEvent&&t.preloadResponse){const r=await t.preloadResponse;if(r)return r}const a=this.hasCallback("fetchDidFail")?n.clone():null;try{for(const r of this.iterateCallbacks("requestWillFetch"))n=await r({request:n.clone(),event:t})}catch(r){if(r instanceof Error)throw new l("plugin-error-request-will-fetch",{thrownErrorMessage:r.message})}const i=n.clone();try{let r;r=await fetch(n,n.mode==="navigate"?void 0:this._strategy.fetchOptions);for(const o of this.iterateCallbacks("fetchDidSucceed"))r=await o({event:t,request:i,response:r});return r}catch(r){throw a&&await this.runCallbacks("fetchDidFail",{error:r,event:t,originalRequest:a.clone(),request:i.clone()}),r}}async fetchAndCachePut(e){const t=await this.fetch(e),n=t.clone();return this.waitUntil(this.cachePut(e,n)),t}async cacheMatch(e){const t=D(e);let n;const{cacheName:a,matchOptions:i}=this._strategy,r=await this.getCacheKey(t,"read"),o=Object.assign(Object.assign({},i),{cacheName:a});n=await caches.match(r,o);for(const c of this.iterateCallbacks("cachedResponseWillBeUsed"))n=await c({cacheName:a,matchOptions:i,cachedResponse:n,request:r,event:this.event})||void 0;return n}async cachePut(e,t){const n=D(e);await X(0);const a=await this.getCacheKey(n,"write");if(!t)throw new l("cache-put-with-no-response",{url:ye(a.url)});const i=await this._ensureResponseSafeToCache(t);if(!i)return!1;const{cacheName:r,matchOptions:o}=this._strategy,c=await self.caches.open(r),h=this.hasCallback("cacheDidUpdate"),w=h?await me(c,a.clone(),["__WB_REVISION__"],o):null;try{await c.put(a,h?i.clone():i)}catch(u){if(u instanceof Error)throw u.name==="QuotaExceededError"&&await we(),u}for(const u of this.iterateCallbacks("cacheDidUpdate"))await u({cacheName:r,oldResponse:w,newResponse:i.clone(),request:a,event:this.event});return!0}async getCacheKey(e,t){const n=`${e.url} | ${t}`;if(!this._cacheKeys[n]){let a=e;for(const i of this.iterateCallbacks("cacheKeyWillBeUsed"))a=D(await i({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[n]=a}return this._cacheKeys[n]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const n of this.iterateCallbacks(e))await n(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if(typeof t[e]=="function"){const n=this._pluginStateMap.get(t);yield i=>{const r=Object.assign(Object.assign({},i),{state:n});return t[e](r)}}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,n=!1;for(const a of this.iterateCallbacks("cacheWillUpdate"))if(t=await a({request:this.request,response:t,event:this.event})||void 0,n=!0,!t)break;return n||t&&t.status!==200&&(t=void 0),t}}class N{constructor(e={}){this.cacheName=k.getRuntimeName(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,n=typeof e.request=="string"?new Request(e.request):e.request,a="params"in e?e.params:void 0,i=new _e(this,{event:t,request:n,params:a}),r=this._getResponse(i,n,t),o=this._awaitComplete(r,i,n,t);return[r,o]}async _getResponse(e,t,n){await e.runCallbacks("handlerWillStart",{event:n,request:t});let a;try{if(a=await this._handle(t,e),!a||a.type==="error")throw new l("no-response",{url:t.url})}catch(i){if(i instanceof Error){for(const r of e.iterateCallbacks("handlerDidError"))if(a=await r({error:i,event:n,request:t}),a)break}if(!a)throw i}for(const i of e.iterateCallbacks("handlerWillRespond"))a=await i({event:n,request:t,response:a});return a}async _awaitComplete(e,t,n,a){let i,r;try{i=await e}catch{}try{await t.runCallbacks("handlerDidRespond",{event:a,request:n,response:i}),await t.doneWaiting()}catch(o){o instanceof Error&&(r=o)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:n,response:i,error:r}),t.destroy(),r)throw r}}class y extends N{constructor(e={}){e.cacheName=k.getPrecacheName(e.cacheName),super(e),this._fallbackToNetwork=e.fallbackToNetwork!==!1,this.plugins.push(y.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const n=await t.cacheMatch(e);return n||(t.event&&t.event.type==="install"?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let n;const a=t.params||{};if(this._fallbackToNetwork){const i=a.integrity,r=e.integrity,o=!r||r===i;n=await t.fetch(new Request(e,{integrity:e.mode!=="no-cors"?r||i:void 0})),i&&o&&e.mode!=="no-cors"&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,n.clone()))}else throw new l("missing-precache-entry",{cacheName:this.cacheName,url:e.url});return n}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const n=await t.fetch(e);if(!await t.cachePut(e,n.clone()))throw new l("bad-precaching-response",{url:e.url,status:n.status});return n}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[n,a]of this.plugins.entries())a!==y.copyRedirectedCacheableResponsesPlugin&&(a===y.defaultPrecacheCacheabilityPlugin&&(e=n),a.cacheWillUpdate&&t++);t===0?this.plugins.push(y.defaultPrecacheCacheabilityPlugin):t>1&&e!==null&&this.plugins.splice(e,1)}}y.defaultPrecacheCacheabilityPlugin={async cacheWillUpdate({response:s}){return!s||s.status>=400?null:s}};y.copyRedirectedCacheableResponsesPlugin={async cacheWillUpdate({response:s}){return s.redirected?await pe(s):s}};class be{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:n=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new y({cacheName:k.getPrecacheName(e),plugins:[...t,new de({precacheController:this})],fallbackToNetwork:n}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const t=[];for(const n of e){typeof n=="string"?t.push(n):n&&n.revision===void 0&&t.push(n.url);const{cacheKey:a,url:i}=le(n),r=typeof n!="string"&&n.revision?"reload":"default";if(this._urlsToCacheKeys.has(i)&&this._urlsToCacheKeys.get(i)!==a)throw new l("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(i),secondEntry:a});if(typeof n!="string"&&n.integrity){if(this._cacheKeysToIntegrities.has(a)&&this._cacheKeysToIntegrities.get(a)!==n.integrity)throw new l("add-to-cache-list-conflicting-integrities",{url:i});this._cacheKeysToIntegrities.set(a,n.integrity)}if(this._urlsToCacheKeys.set(i,a),this._urlsToCacheModes.set(i,r),t.length>0){const o=`Workbox is precaching URLs without revision info: ${t.join(", ")}
This is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(o)}}}install(e){return j(e,async()=>{const t=new ue;this.strategy.plugins.push(t);for(const[i,r]of this._urlsToCacheKeys){const o=this._cacheKeysToIntegrities.get(r),c=this._urlsToCacheModes.get(i),h=new Request(i,{integrity:o,cache:c,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:r},request:h,event:e}))}const{updatedURLs:n,notUpdatedURLs:a}=t;return{updatedURLs:n,notUpdatedURLs:a}})}activate(e){return j(e,async()=>{const t=await self.caches.open(this.strategy.cacheName),n=await t.keys(),a=new Set(this._urlsToCacheKeys.values()),i=[];for(const r of n)a.has(r.url)||(await t.delete(r),i.push(r.url));return{deletedURLs:i}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,n=this.getCacheKeyForURL(t);if(n)return(await self.caches.open(this.strategy.cacheName)).match(n)}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new l("non-precached-url",{url:e});return n=>(n.request=new Request(e),n.params=Object.assign({cacheKey:t},n.params),this.strategy.handle(n))}}let S;const M=()=>(S||(S=new be),S);try{self["workbox:routing:7.2.0"]&&_()}catch{}const Y="GET",T=s=>s&&typeof s=="object"?s:{handle:s};class m{constructor(e,t,n=Y){this.handler=T(t),this.match=e,this.method=n}setCatchHandler(e){this.catchHandler=T(e)}}class Re extends m{constructor(e,t,n){const a=({url:i})=>{const r=e.exec(i.href);if(r&&!(i.origin!==location.origin&&r.index!==0))return r.slice(1)};super(a,t,n)}}class Ee{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,n=this.handleRequest({request:t,event:e});n&&e.respondWith(n)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&e.data.type==="CACHE_URLS"){const{payload:t}=e.data,n=Promise.all(t.urlsToCache.map(a=>{typeof a=="string"&&(a=[a]);const i=new Request(...a);return this.handleRequest({request:i,event:e})}));e.waitUntil(n),e.ports&&e.ports[0]&&n.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const n=new URL(e.url,location.href);if(!n.protocol.startsWith("http"))return;const a=n.origin===location.origin,{params:i,route:r}=this.findMatchingRoute({event:t,request:e,sameOrigin:a,url:n});let o=r&&r.handler;const c=e.method;if(!o&&this._defaultHandlerMap.has(c)&&(o=this._defaultHandlerMap.get(c)),!o)return;let h;try{h=o.handle({url:n,request:e,event:t,params:i})}catch(u){h=Promise.reject(u)}const w=r&&r.catchHandler;return h instanceof Promise&&(this._catchHandler||w)&&(h=h.catch(async u=>{if(w)try{return await w.handle({url:n,request:e,event:t,params:i})}catch(B){B instanceof Error&&(u=B)}if(this._catchHandler)return this._catchHandler.handle({url:n,request:e,event:t});throw u})),h}findMatchingRoute({url:e,sameOrigin:t,request:n,event:a}){const i=this._routes.get(n.method)||[];for(const r of i){let o;const c=r.match({url:e,sameOrigin:t,request:n,event:a});if(c)return o=c,(Array.isArray(o)&&o.length===0||c.constructor===Object&&Object.keys(c).length===0||typeof c=="boolean")&&(o=void 0),{route:r,params:o}}return{}}setDefaultHandler(e,t=Y){this._defaultHandlerMap.set(t,T(e))}setCatchHandler(e){this._catchHandler=T(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new l("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new l("unregister-route-route-not-registered")}}let R;const Ce=()=>(R||(R=new Ee,R.addFetchListener(),R.addCacheListener()),R);function g(s,e,t){let n;if(typeof s=="string"){const i=new URL(s,location.href),r=({url:o})=>o.href===i.href;n=new m(r,e,t)}else if(s instanceof RegExp)n=new Re(s,e,t);else if(typeof s=="function")n=new m(s,e,t);else if(s instanceof m)n=s;else throw new l("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});return Ce().registerRoute(n),n}function xe(s,e=[]){for(const t of[...s.searchParams.keys()])e.some(n=>n.test(t))&&s.searchParams.delete(t);return s}function*De(s,{ignoreURLParametersMatching:e=[/^utm_/,/^fbclid$/],directoryIndex:t="index.html",cleanURLs:n=!0,urlManipulation:a}={}){const i=new URL(s,location.href);i.hash="",yield i.href;const r=xe(i,e);if(yield r.href,t&&r.pathname.endsWith("/")){const o=new URL(r.href);o.pathname+=t,yield o.href}if(n){const o=new URL(r.href);o.pathname+=".html",yield o.href}if(a){const o=a({url:i});for(const c of o)yield c.href}}class Te extends m{constructor(e,t){const n=({request:a})=>{const i=e.getURLsToCacheKeys();for(const r of De(a.url,t)){const o=i.get(r);if(o){const c=e.getIntegrityForCacheKey(o);return{cacheKey:o,integrity:c}}}};super(n,e.strategy)}}function ke(s){const e=M(),t=new Te(e,s);g(t)}function Ne(s){return M().createHandlerBoundToURL(s)}function Ue(s){M().precache(s)}function Se(s,e){Ue(s),ke(e)}class Le extends m{constructor(e,{allowlist:t=[/./],denylist:n=[]}={}){super(a=>this._match(a),e),this._allowlist=t,this._denylist=n}_match({url:e,request:t}){if(t&&t.mode!=="navigate")return!1;const n=e.pathname+e.search;for(const a of this._denylist)if(a.test(n))return!1;return!!this._allowlist.some(a=>a.test(n))}}const Z={cacheWillUpdate:async({response:s})=>s.status===200||s.status===0?s:null};class Pe extends N{constructor(e={}){super(e),this.plugins.some(t=>"cacheWillUpdate"in t)||this.plugins.unshift(Z),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){const n=[],a=[];let i;if(this._networkTimeoutSeconds){const{id:c,promise:h}=this._getTimeoutPromise({request:e,logs:n,handler:t});i=c,a.push(h)}const r=this._getNetworkPromise({timeoutId:i,request:e,logs:n,handler:t});a.push(r);const o=await t.waitUntil((async()=>await t.waitUntil(Promise.race(a))||await r)());if(!o)throw new l("no-response",{url:e.url});return o}_getTimeoutPromise({request:e,logs:t,handler:n}){let a;return{promise:new Promise(r=>{a=setTimeout(async()=>{r(await n.cacheMatch(e))},this._networkTimeoutSeconds*1e3)}),id:a}}async _getNetworkPromise({timeoutId:e,request:t,logs:n,handler:a}){let i,r;try{r=await a.fetchAndCachePut(t)}catch(o){o instanceof Error&&(i=o)}return e&&clearTimeout(e),(i||!r)&&(r=await a.cacheMatch(t)),r}}class Ie extends N{constructor(e={}){super(e),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){let n,a;try{const i=[t.fetch(e)];if(this._networkTimeoutSeconds){const r=X(this._networkTimeoutSeconds*1e3);i.push(r)}if(a=await Promise.race(i),!a)throw new Error(`Timed out the network response after ${this._networkTimeoutSeconds} seconds.`)}catch(i){i instanceof Error&&(n=i)}if(!a)throw new l("no-response",{url:e.url,error:n});return a}}class ee extends N{constructor(e={}){super(e),this.plugins.some(t=>"cacheWillUpdate"in t)||this.plugins.unshift(Z)}async _handle(e,t){const n=t.fetchAndCachePut(e).catch(()=>{});t.waitUntil(n);let a=await t.cacheMatch(e),i;if(!a)try{a=await n}catch(r){r instanceof Error&&(i=r)}if(!a)throw new l("no-response",{url:e.url,error:i});return a}}try{self["workbox:cacheable-response:7.2.0"]&&_()}catch{}class qe{constructor(e={}){this._statuses=e.statuses,this._headers=e.headers}isResponseCacheable(e){let t=!0;return this._statuses&&(t=this._statuses.includes(e.status)),this._headers&&t&&(t=Object.keys(this._headers).some(n=>e.headers.get(n)===this._headers[n])),t}}class te{constructor(e){this.cacheWillUpdate=async({response:t})=>this._cacheableResponse.isResponseCacheable(t)?t:null,this._cacheableResponse=new qe(e)}}function se(s){s.then(()=>{})}const ve=(s,e)=>e.some(t=>s instanceof t);let F,H;function Ae(){return F||(F=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function Me(){return H||(H=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const ne=new WeakMap,v=new WeakMap,ae=new WeakMap,L=new WeakMap,O=new WeakMap;function Oe(s){const e=new Promise((t,n)=>{const a=()=>{s.removeEventListener("success",i),s.removeEventListener("error",r)},i=()=>{t(p(s.result)),a()},r=()=>{n(s.error),a()};s.addEventListener("success",i),s.addEventListener("error",r)});return e.then(t=>{t instanceof IDBCursor&&ne.set(t,s)}).catch(()=>{}),O.set(e,s),e}function Ke(s){if(v.has(s))return;const e=new Promise((t,n)=>{const a=()=>{s.removeEventListener("complete",i),s.removeEventListener("error",r),s.removeEventListener("abort",r)},i=()=>{t(),a()},r=()=>{n(s.error||new DOMException("AbortError","AbortError")),a()};s.addEventListener("complete",i),s.addEventListener("error",r),s.addEventListener("abort",r)});v.set(s,e)}let A={get(s,e,t){if(s instanceof IDBTransaction){if(e==="done")return v.get(s);if(e==="objectStoreNames")return s.objectStoreNames||ae.get(s);if(e==="store")return t.objectStoreNames[1]?void 0:t.objectStore(t.objectStoreNames[0])}return p(s[e])},set(s,e,t){return s[e]=t,!0},has(s,e){return s instanceof IDBTransaction&&(e==="done"||e==="store")?!0:e in s}};function Be(s){A=s(A)}function je(s){return s===IDBDatabase.prototype.transaction&&!("objectStoreNames"in IDBTransaction.prototype)?function(e,...t){const n=s.call(P(this),e,...t);return ae.set(n,e.sort?e.sort():[e]),p(n)}:Me().includes(s)?function(...e){return s.apply(P(this),e),p(ne.get(this))}:function(...e){return p(s.apply(P(this),e))}}function We(s){return typeof s=="function"?je(s):(s instanceof IDBTransaction&&Ke(s),ve(s,Ae())?new Proxy(s,A):s)}function p(s){if(s instanceof IDBRequest)return Oe(s);if(L.has(s))return L.get(s);const e=We(s);return e!==s&&(L.set(s,e),O.set(e,s)),e}const P=s=>O.get(s);function ie(s,e,{blocked:t,upgrade:n,blocking:a,terminated:i}={}){const r=indexedDB.open(s,e),o=p(r);return n&&r.addEventListener("upgradeneeded",c=>{n(p(r.result),c.oldVersion,c.newVersion,p(r.transaction),c)}),t&&r.addEventListener("blocked",c=>t(c.oldVersion,c.newVersion,c)),o.then(c=>{i&&c.addEventListener("close",()=>i()),a&&c.addEventListener("versionchange",h=>a(h.oldVersion,h.newVersion,h))}).catch(()=>{}),o}function Fe(s,{blocked:e}={}){const t=indexedDB.deleteDatabase(s);return e&&t.addEventListener("blocked",n=>e(n.oldVersion,n)),p(t).then(()=>{})}const He=["get","getKey","getAll","getAllKeys","count"],Qe=["put","add","delete","clear"],I=new Map;function Q(s,e){if(!(s instanceof IDBDatabase&&!(e in s)&&typeof e=="string"))return;if(I.get(e))return I.get(e);const t=e.replace(/FromIndex$/,""),n=e!==t,a=Qe.includes(t);if(!(t in(n?IDBIndex:IDBObjectStore).prototype)||!(a||He.includes(t)))return;const i=async function(r,...o){const c=this.transaction(r,a?"readwrite":"readonly");let h=c.store;return n&&(h=h.index(o.shift())),(await Promise.all([h[t](...o),a&&c.done]))[0]};return I.set(e,i),i}Be(s=>({...s,get:(e,t,n)=>Q(e,t)||s.get(e,t,n),has:(e,t)=>!!Q(e,t)||s.has(e,t)}));try{self["workbox:expiration:7.2.0"]&&_()}catch{}const Ve="workbox-expiration",E="cache-entries",V=s=>{const e=new URL(s,location.href);return e.hash="",e.href};class $e{constructor(e){this._db=null,this._cacheName=e}_upgradeDb(e){const t=e.createObjectStore(E,{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1})}_upgradeDbAndDeleteOldDbs(e){this._upgradeDb(e),this._cacheName&&Fe(this._cacheName)}async setTimestamp(e,t){e=V(e);const n={url:e,timestamp:t,cacheName:this._cacheName,id:this._getId(e)},i=(await this.getDb()).transaction(E,"readwrite",{durability:"relaxed"});await i.store.put(n),await i.done}async getTimestamp(e){const n=await(await this.getDb()).get(E,this._getId(e));return n==null?void 0:n.timestamp}async expireEntries(e,t){const n=await this.getDb();let a=await n.transaction(E).store.index("timestamp").openCursor(null,"prev");const i=[];let r=0;for(;a;){const c=a.value;c.cacheName===this._cacheName&&(e&&c.timestamp<e||t&&r>=t?i.push(a.value):r++),a=await a.continue()}const o=[];for(const c of i)await n.delete(E,c.id),o.push(c.url);return o}_getId(e){return this._cacheName+"|"+V(e)}async getDb(){return this._db||(this._db=await ie(Ve,1,{upgrade:this._upgradeDbAndDeleteOldDbs.bind(this)})),this._db}}class Ge{constructor(e,t={}){this._isRunning=!1,this._rerunRequested=!1,this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._matchOptions=t.matchOptions,this._cacheName=e,this._timestampModel=new $e(e)}async expireEntries(){if(this._isRunning){this._rerunRequested=!0;return}this._isRunning=!0;const e=this._maxAgeSeconds?Date.now()-this._maxAgeSeconds*1e3:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),n=await self.caches.open(this._cacheName);for(const a of t)await n.delete(a,this._matchOptions);this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,se(this.expireEntries()))}async updateTimestamp(e){await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(this._maxAgeSeconds){const t=await this._timestampModel.getTimestamp(e),n=Date.now()-this._maxAgeSeconds*1e3;return t!==void 0?t<n:!0}else return!1}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}function ze(s){J.add(s)}class K{constructor(e={}){this.cachedResponseWillBeUsed=async({event:t,request:n,cacheName:a,cachedResponse:i})=>{if(!i)return null;const r=this._isResponseDateFresh(i),o=this._getCacheExpiration(a);se(o.expireEntries());const c=o.updateTimestamp(n.url);if(t)try{t.waitUntil(c)}catch{}return r?i:null},this.cacheDidUpdate=async({cacheName:t,request:n})=>{const a=this._getCacheExpiration(t);await a.updateTimestamp(n.url),await a.expireEntries()},this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&ze(()=>this.deleteCacheAndMetadata())}_getCacheExpiration(e){if(e===k.getRuntimeName())throw new l("expire-custom-caches-only");let t=this._cacheExpirations.get(e);return t||(t=new Ge(e,this._config),this._cacheExpirations.set(e,t)),t}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;const t=this._getDateHeaderTimestamp(e);if(t===null)return!0;const n=Date.now();return t>=n-this._maxAgeSeconds*1e3}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),a=new Date(t).getTime();return isNaN(a)?null:a}async deleteCacheAndMetadata(){for(const[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete();this._cacheExpirations=new Map}}try{self["workbox:background-sync:7.2.0"]&&_()}catch{}const $=3,Je="workbox-background-sync",d="requests",C="queueName";class Xe{constructor(){this._db=null}async addEntry(e){const n=(await this.getDb()).transaction(d,"readwrite",{durability:"relaxed"});await n.store.add(e),await n.done}async getFirstEntryId(){const t=await(await this.getDb()).transaction(d).store.openCursor();return t==null?void 0:t.value.id}async getAllEntriesByQueueName(e){const n=await(await this.getDb()).getAllFromIndex(d,C,IDBKeyRange.only(e));return n||new Array}async getEntryCountByQueueName(e){return(await this.getDb()).countFromIndex(d,C,IDBKeyRange.only(e))}async deleteEntry(e){await(await this.getDb()).delete(d,e)}async getFirstEntryByQueueName(e){return await this.getEndEntryFromIndex(IDBKeyRange.only(e),"next")}async getLastEntryByQueueName(e){return await this.getEndEntryFromIndex(IDBKeyRange.only(e),"prev")}async getEndEntryFromIndex(e,t){const a=await(await this.getDb()).transaction(d).store.index(C).openCursor(e,t);return a==null?void 0:a.value}async getDb(){return this._db||(this._db=await ie(Je,$,{upgrade:this._upgradeDb})),this._db}_upgradeDb(e,t){t>0&&t<$&&e.objectStoreNames.contains(d)&&e.deleteObjectStore(d),e.createObjectStore(d,{autoIncrement:!0,keyPath:"id"}).createIndex(C,C,{unique:!1})}}class Ye{constructor(e){this._queueName=e,this._queueDb=new Xe}async pushEntry(e){delete e.id,e.queueName=this._queueName,await this._queueDb.addEntry(e)}async unshiftEntry(e){const t=await this._queueDb.getFirstEntryId();t?e.id=t-1:delete e.id,e.queueName=this._queueName,await this._queueDb.addEntry(e)}async popEntry(){return this._removeEntry(await this._queueDb.getLastEntryByQueueName(this._queueName))}async shiftEntry(){return this._removeEntry(await this._queueDb.getFirstEntryByQueueName(this._queueName))}async getAll(){return await this._queueDb.getAllEntriesByQueueName(this._queueName)}async size(){return await this._queueDb.getEntryCountByQueueName(this._queueName)}async deleteEntry(e){await this._queueDb.deleteEntry(e)}async _removeEntry(e){return e&&await this.deleteEntry(e.id),e}}const Ze=["method","referrer","referrerPolicy","mode","credentials","cache","redirect","integrity","keepalive"];class x{static async fromRequest(e){const t={url:e.url,headers:{}};e.method!=="GET"&&(t.body=await e.clone().arrayBuffer());for(const[n,a]of e.headers.entries())t.headers[n]=a;for(const n of Ze)e[n]!==void 0&&(t[n]=e[n]);return new x(t)}constructor(e){e.mode==="navigate"&&(e.mode="same-origin"),this._requestData=e}toObject(){const e=Object.assign({},this._requestData);return e.headers=Object.assign({},this._requestData.headers),e.body&&(e.body=e.body.slice(0)),e}toRequest(){return new Request(this._requestData.url,this._requestData)}clone(){return new x(this.toObject())}}const G="workbox-background-sync",et=60*24*7,q=new Set,z=s=>{const e={request:new x(s.requestData).toRequest(),timestamp:s.timestamp};return s.metadata&&(e.metadata=s.metadata),e};class tt{constructor(e,{forceSyncFallback:t,onSync:n,maxRetentionTime:a}={}){if(this._syncInProgress=!1,this._requestsAddedDuringSync=!1,q.has(e))throw new l("duplicate-queue-name",{name:e});q.add(e),this._name=e,this._onSync=n||this.replayRequests,this._maxRetentionTime=a||et,this._forceSyncFallback=!!t,this._queueStore=new Ye(this._name),this._addSyncListener()}get name(){return this._name}async pushRequest(e){await this._addRequest(e,"push")}async unshiftRequest(e){await this._addRequest(e,"unshift")}async popRequest(){return this._removeRequest("pop")}async shiftRequest(){return this._removeRequest("shift")}async getAll(){const e=await this._queueStore.getAll(),t=Date.now(),n=[];for(const a of e){const i=this._maxRetentionTime*60*1e3;t-a.timestamp>i?await this._queueStore.deleteEntry(a.id):n.push(z(a))}return n}async size(){return await this._queueStore.size()}async _addRequest({request:e,metadata:t,timestamp:n=Date.now()},a){const r={requestData:(await x.fromRequest(e.clone())).toObject(),timestamp:n};switch(t&&(r.metadata=t),a){case"push":await this._queueStore.pushEntry(r);break;case"unshift":await this._queueStore.unshiftEntry(r);break}this._syncInProgress?this._requestsAddedDuringSync=!0:await this.registerSync()}async _removeRequest(e){const t=Date.now();let n;switch(e){case"pop":n=await this._queueStore.popEntry();break;case"shift":n=await this._queueStore.shiftEntry();break}if(n){const a=this._maxRetentionTime*60*1e3;return t-n.timestamp>a?this._removeRequest(e):z(n)}else return}async replayRequests(){let e;for(;e=await this.shiftRequest();)try{await fetch(e.request.clone())}catch{throw await this.unshiftRequest(e),new l("queue-replay-failed",{name:this._name})}}async registerSync(){if("sync"in self.registration&&!this._forceSyncFallback)try{await self.registration.sync.register(`${G}:${this._name}`)}catch{}}_addSyncListener(){"sync"in self.registration&&!this._forceSyncFallback?self.addEventListener("sync",e=>{if(e.tag===`${G}:${this._name}`){const t=async()=>{this._syncInProgress=!0;let n;try{await this._onSync({queue:this})}catch(a){if(a instanceof Error)throw n=a,n}finally{this._requestsAddedDuringSync&&!(n&&!e.lastChance)&&await this.registerSync(),this._syncInProgress=!1,this._requestsAddedDuringSync=!1}};e.waitUntil(t())}}):this._onSync({queue:this})}static get _queueNames(){return q}}const st=Ne("offline.html"),nt=new Le(st,{denylist:[/\/api\//]});g(nt);Se([{"revision":null,"url":"assets/activity-DlbzSBR_.js"},{"revision":null,"url":"assets/AnalyticsSection-BZ9LaOKZ.js"},{"revision":null,"url":"assets/AnimatedNumber-DsIDgrtT.js"},{"revision":null,"url":"assets/ConfigurationSection-ZrmdyYr5.js"},{"revision":null,"url":"assets/DashboardSection-DGz7cX6H.js"},{"revision":null,"url":"assets/FavoritesView-DMlLdlsb.js"},{"revision":null,"url":"assets/index-CuI5jObH.js"},{"revision":null,"url":"assets/index-TnAuy5Lw.css"},{"revision":null,"url":"assets/InfoTooltip-BNC21C3E.js"},{"revision":null,"url":"assets/ListOverviewActionsSection-BTA4WN3Z.js"},{"revision":null,"url":"assets/MemberDatabaseSection-DPMxmr5A.js"},{"revision":null,"url":"assets/ReportsSection-C3hazOWR.js"},{"revision":"9e0893cd77f8ff8c8c55ced8efd7e673","url":"index.html"},{"revision":"43a7b6e7c7403def32e044d7d4e24ca2","url":"offline.html"},{"revision":"e88454a1b0599b5421dcd89de3cd9165","url":"registerSW.js"},{"revision":"317382167e1e562d104de8ddf8a45ec4","url":"img/android/android-launchericon-192-192.png"},{"revision":"2c060a62cb1025ecb4169fb88ac99c51","url":"img/android/android-launchericon-512-512.png"},{"revision":"317382167e1e562d104de8ddf8a45ec4","url":"img/ios/192.png"},{"revision":"2c060a62cb1025ecb4169fb88ac99c51","url":"img/ios/512.png"},{"revision":"8001d2e142ef16bc884d4732ab5ea2f7","url":"manifest.webmanifest"}]);g(({url:s})=>s.hostname==="www.googleapis.com",new ee({cacheName:"google-api-cache",plugins:[new te({statuses:[0,200]}),new K({maxEntries:50,maxAgeSeconds:30*24*60*60})]}));g(({url:s,request:e})=>s.pathname.startsWith("/api/")&&e.method==="GET",new Pe({cacheName:"api-cache",plugins:[new te({statuses:[0,200]}),new K({maxEntries:30,maxAgeSeconds:24*60*60})]}));g(({url:s,request:e})=>s.pathname.startsWith("/api/")&&e.method!=="GET",new Ie);g(({request:s})=>s.destination==="image",new ee({cacheName:"image-cache",plugins:[new K({maxEntries:60,maxAgeSeconds:30*24*60*60})]}));self.addEventListener("push",s=>{var a;const e=((a=s.data)==null?void 0:a.json())??{title:"Tithe Update",body:"A new tithe list has been processed."},n={...{body:e.body,icon:"/img/android/android-launchericon-192-192.png",badge:"/img/android/android-launchericon-96-96.png",tag:"tactms-notification"},vibrate:[200,100,200],renotify:!0,actions:[{action:"open_app",title:"Open App"},{action:"dismiss",title:"Dismiss"}]};s.waitUntil(self.registration.showNotification(e.title,n))});self.addEventListener("notificationclick",s=>{s.notification.close(),s.action==="open_app"&&s.waitUntil(self.clients.openWindow("./"))});self.addEventListener("sync",s=>{const e=s;e.tag==="sync-tithe-data"&&e.waitUntil(console.log("Background sync for tithe data triggered!"))});self.addEventListener("periodicsync",s=>{const e=s;e.tag==="get-latest-updates"&&e.waitUntil(console.log("Periodic sync for latest updates triggered!"))});self.addEventListener("widgetclick",s=>{s.action==="open-app"&&s.waitUntil(self.clients.openWindow("./"))});self.addEventListener("activate",s=>{s.waitUntil(caches.keys().then(e=>Promise.all(e.map(t=>null))))});self.addEventListener("message",s=>{s.data&&s.data.type==="SKIP_WAITING"&&self.skipWaiting()});const at=new tt("analytics-queue",{maxRetentionTime:24*60});self.addEventListener("message",s=>{if(s.data&&s.data.type==="QUEUE_ANALYTICS_EVENT"){const{payload:e}=s.data,t=fetch("api/analytics",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).catch(()=>at.pushRequest({request:new Request("api/analytics",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})}));s.waitUntil(t)}});
